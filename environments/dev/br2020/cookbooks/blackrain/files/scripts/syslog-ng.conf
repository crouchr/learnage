#
# Syslog-ng example configuration for for Debian GNU/Linux
#
# Copyright (c) 1999 anonymous
# Copyright (c) 1999 Balazs Scheidler
# $Id: syslog-ng.conf.sample,v 1.3 2003/05/20 08:57:27 asd Exp $
#
# Syslog-ng configuration file, compatible with default Debian syslogd
# installation. 
#

options { 
    long_hostnames(off); 
    sync(0); 
    stats(0);
    use_dns(yes);
};

#source src { unix-stream("/dev/log"); internal(); };

# locally generated events
source src { 
    unix-stream("/dev/log"); 
    internal();
    file("/proc/kmsg" log_prefix("kernel")); 
};

source net { udp(ip(192.168.1.67)); };

destination honeypot_file       { file("/home/var/log/honeypot.syslog"); };
destination bro_file            { file("/home/var/log/bro.syslog"); };
destination spamhole_file       { file("/home/var/log/spamhole.syslog"); };
destination ns5_file            { file("/home/var/log/ns5.syslog"); };
destination ns5gt_file          { file("/home/var/log/ns5gt.syslog"); };
destination adsl_file           { file("/home/var/log/iptables.syslog"); };
destination fwsnort_file        { file("/home/var/log/fwsnort.syslog"); };
destination snort_file          { file("/home/var/log/snort.syslog"); };
destination spade_file          { file("/home/var/log/spade.syslog"); };
destination suricata_file       { file("/home/var/log/suricata.syslog"); };
destination amun_file           { file("/home/var/log/amun.syslog"); };
destination honeyd_file         { file("/home/var/log/honeyd.syslog"); };
destination netflow_file        { file("/home/var/log/netflow.syslog"); };
destination netflow_ignore_file { file("/home/var/log/netflow_ignore.syslog"); };
destination dns_file            { file("/home/var/log/honeypot_dns.syslog"); };
destination psad_file           { file("/home/var/log/psad.syslog"); };
destination netflow_raw_file    { file("/home/var/log/netflow_raw.syslog"); };
destination arpwatch_file       { file("/home/var/log/arpwatch.syslog"); };
destination tacacs_file         { file("/home/var/log/tacacs.syslog"); };
destination router_file         { file("/home/var/log/honeyrtr.syslog"); };
destination routerv6_file       { file("/home/var/log/honeyrtrv6.syslog"); };
destination scanlogd_file       { file("/home/var/log/scanlogd.syslog"); };
destination icmpinfo_file       { file("/home/var/log/icmpinfo.syslog"); };
destination shadow_ids_file     { file("/home/var/log/shadow_ids.syslog"); };
destination dnsmasq_file        { file("/home/var/log/dnsmasq.syslog"); };
destination snort_cef_file      { file("/home/var/log/snort_cef.syslog"); };
destination snort_netflow_file  { file("/home/var/log/snort_netflow.syslog"); };
destination ossec_file          { file("/home/var/log/ossec.syslog"); };
destination clamd_file 	        { file("/home/var/log/clamd.syslog"); };
destination conpot_file         { file("/home/var/log/conpot.syslog"); };
destination logglyd_file        { file("/home/var/log/logglyd.syslog"); };
destination tweet_file          { file("/home/var/log/kojoney_tweet.syslog"); };

destination sagan         { 
    pipe("/var/run/sagan.fifo"
    template("$SOURCEIP|$FACILITY|$PRIORITY|$LEVEL|$TAG|$YEAR-$MONTH-$DAY|$HOUR:$MIN:$SEC|$PROGRAM|$MSG\n") template-escape(no));
 };

destination authlog { file("/var/log/auth.log"); };
destination syslog { file("/var/log/syslog"); };
destination cron { file("/var/log/cron.log"); };
destination daemon { file("/var/log/daemon.log"); };
destination kern { file("/var/log/kern.log"); };
destination lpr { file("/var/log/lpr.log"); };
destination user { file("/var/log/user.log"); };
destination uucp { file("/var/log/uucp.log"); };
destination ppp { file("/var/log/ppp.log"); };
destination mail { file("/var/log/mail.log"); };

destination mailinfo { file("/var/log/mail.info"); };
destination mailwarn { file("/var/log/mail.warn"); };
destination mailerr { file("/var/log/mail.err"); };

destination newscrit { file("/var/log/news/news.crit"); };
destination newserr { file("/var/log/news/news.err"); };
destination newsnotice { file("/var/log/news/news.notice"); };

destination debug { file("/var/log/debug"); };
destination messages { file("/var/log/messages"); };
destination console { usertty("root"); };
destination console_all { file("/dev/tty12"); };
#destination loghost { udp("loghost" port(999)); };

# Send to my local ELK server running in VBox
destination elasticsearch {
 udp("192.168.1.55", port(5514));
};

# Send to Internet-based Papertrail
destination papertrail {
 udp("logs2.papertrailapp.com", port(52491));
};

destination xconsole { pipe("/dev/xconsole"); };

filter f_auth { facility(auth); };
filter f_authpriv { facility(auth, authpriv); };
filter f_syslog { not facility(authpriv, mail); };
filter f_cron { facility(cron); };
filter f_daemon { facility(daemon); };
filter f_kern { facility(kern); };
filter f_lpr { facility(lpr); };
filter f_mail { facility(mail); };
filter f_user { facility(user); };
filter f_uucp { facility(cron); };
filter f_ppp { facility(local2); };
filter f_news { facility(news); };
filter f_debug { not facility(auth, authpriv, news, mail); };
filter f_messages { level(info..warn) and not match("FLOW") and not program("blackrain_netflow") and not program("dnsmasq") and not program("tac_plus") and not program("capstats") and not program("arpwatch") and not program("Amun") and not match("snort") and not program("psad") and not program("honeyd") and not program("suricata") and not program("netflow-bg_rtr") and not program("netflow-mars_fp") and not facility(auth, authpriv, mail, news); };
filter f_netflow { match("FLOW"); };
filter f_emergency { level(emerg); };

filter f_info   { level(info); };
filter f_notice { level(notice); };
filter f_warn   { level(warn); };
filter f_crit   { level(crit); };
filter f_err    { level(err); };
filter f_alert  { level(alert); };

filter honeypot_host   { netmask("172.31.0.67");    };
filter ns5_host        { netmask("192.168.1.253");  };
filter ns5gt_host      { netmask("192.168.1.254");  };
filter adsl_host       { netmask("192.168.1.250");  };
filter spade_host      { netmask("192.168.1.76");   };
filter router_host     { netmask("172.29.0.9");     };
filter routerv6_host   { netmask("192.168.1.2");    };
filter conpot_host     { netmask("192.168.1.50");   };
#filter shadow_ids_host { netmask("192.168.1.5");   };
filter shadow_ids_host { netmask("192.168.1.74");   };
filter vm_host         { netmask("172.30.0.2") and program("dnsmasq"); };

filter snort           { facility(local5); 	       };
filter amun            { facility(local4); 	       };
filter f_honeyd        { program(honeyd);  	       };
filter f_fwsnort       { facility(kern) and level(warn); };
filter f_bro           { program(capstats);  	       };
filter f_spamhole      { program(spamhole);  	       };
filter f_psad          { program("psad");  	       };
filter f_netflow       { program("blackrain_netflow") and facility(local2); };
filter f_netflow_ign   { program("blackrain_netflow") and facility(local0); };
filter f_netflow_raw   { program("netflow-bg_rtr") or program("netflow-mars_fp"); };
filter f_arpwatch      { program("arpwatch");            				};
filter f_suricata      { program("suricata");            				};
filter f_scanlogd      { program("scanlogd");            				};
filter f_icmpinfo      { program("icmpinfo");            				};
filter f_dnsmasq       { program("dnsmasq");             				};
filter f_clamd         { program("clamd");	             				};
#filter f_ossec         { program("ossec");	             				};
#filter f_ossec         { facility(local0) and level(warn);    				};
filter f_tacacs        { program("tac_plus");            				};
filter f_logglyd       { program("kojoney_logglyd");            			};
filter f_tweet         { program("kojoney_tweet")   ;            			};
filter f_snort_cef     { facility(local2);              				};
filter f_snort_netflow { facility(local2) and netmask("192.168.1.76");              	};
#filter f_suricata     { facility(local1);              				};

#filter honeypot_host { host("bot-malware"); };

log { source(src); filter(f_authpriv); destination(authlog); };
log { source(src); filter(f_syslog); destination(syslog); };
log { source(src); filter(f_cron); destination(cron); };
log { source(src); filter(f_daemon); destination(daemon); };
log { source(src); filter(f_kern); destination(kern); };
log { source(src); filter(f_lpr); destination(lpr); };
log { source(src); filter(f_mail); destination(mail); };
log { source(src); filter(f_user); destination(user); };
log { source(src); filter(f_uucp); destination(uucp); };
log { source(src); filter(f_mail); filter(f_info); destination(mailinfo); };
log { source(src); filter(f_mail); filter(f_warn); destination(mailwarn); };
log { source(src); filter(f_mail); filter(f_err); destination(mailerr); };
log { source(src); filter(f_news); filter(f_crit); destination(newscrit); };
log { source(src); filter(f_news); filter(f_err); destination(newserr); };
log { source(src); filter(f_news); filter(f_notice); destination(newsnotice); };
log { source(src); filter(f_debug); destination(debug); };
log { source(src); filter(f_messages); destination(messages); };
log { source(src); filter(f_emergency); destination(console); };
log { source(src); filter(f_ppp); destination(ppp); };
log { source(src); destination(console_all); };
log { source(src); filter(f_tacacs)              ; destination(tacacs_file);      };

# syslogs sent from other nodes
log { source(net); filter(honeypot_host)         ; destination(honeypot_file); };
log { source(net); filter(shadow_ids_host)       ; destination(shadow_ids_file); };
# corrupted syslogs (trojaned bash ?) are crashing sagan
log { source(net); filter(honeypot_host)         ; destination(sagan);         		};
log { source(net); filter(ns5_host)              ; destination(ns5_file);      		};
#log { source(net); filter(ns5_host)             ; destination(sagan);         		};
log { source(net); filter(ns5gt_host)            ; destination(ns5gt_file);    		};
#log { source(net); filter(ns5gt_host)           ; destination(sagan);         		};
log { source(net); filter(adsl_host)             ; destination(adsl_file);     		};
log { source(net); filter(spade_host)            ; destination(spade_file);     	};
log { source(net); filter(f_snort_netflow)       ; destination(snort_file);     	};
#log { source(net); filter(adsl_host)            ; destination(sagan);         		};
log { source(net); filter(vm_host)               ; destination(dns_file);      		};
log { source(net); filter(f_netflow_raw)         ; destination(netflow_raw_file);      	};
log { source(net); filter(router_host)           ; destination(router_file);    	};
log { source(net); filter(routerv6_host)         ; destination(routerv6_file);    	};
log { source(net); filter(conpot_host)           ; destination(conpot_file);    	};

# locally-generated syslogs
log { source(src); filter(snort);  filter(f_alert) ; destination(snort_file);   };
#log { source(src); filter(f_suricata); destination(suricata_file);   };
log { source(src); filter(f_snort_cef); destination(snort_cef_file);   };
#log { source(src); filter(snort);  filter(f_alert) ; destination(sagan);        };
log { source(src); filter(amun);   filter(f_warn)  ; destination(amun_file);    };
log { source(src); filter(amun);   filter(f_warn)  ; destination(amun_file);    };
log { source(src); filter(f_honeyd);                 destination(honeyd_file);  };
log { source(src); filter(f_fwsnort);                destination(fwsnort_file);  };
log { source(net); filter(f_honeyd);                 destination(sagan); 	};
# netflows for traffic to honeypots
log { source(src); filter(f_netflow);                destination(netflow_file); };
# all other netflows
log { source(src); filter(f_netflow_ign);            destination(netflow_ignore_file); };
log { source(src); filter(f_psad);                   destination(psad_file);        };
log { source(src); filter(f_bro);                    destination(bro_file);         };
log { source(src); filter(f_spamhole);               destination(spamhole_file);    };
log { source(src); filter(f_netflow_raw);            destination(netflow_raw_file); };
log { source(src); filter(f_arpwatch);               destination(arpwatch_file);    };
log { source(src); filter(f_scanlogd);               destination(scanlogd_file);    };
log { source(src); filter(f_icmpinfo);               destination(icmpinfo_file);    };
log { source(src); filter(f_dnsmasq);                destination(dnsmasq_file);     };
log { source(src); filter(f_clamd);	             destination(clamd_file);       };

log { source(src); filter(f_logglyd);	             destination(logglyd_file);  };

# Send to ELK-like log systems
log { source(src); filter(f_logglyd);	             destination(elasticsearch); };
log { source(src); filter(f_logglyd);	             destination(papertrail); };

# Not sure this does anything yet - fixme
log { source(src); filter(f_tweet);	             destination(tweet_file);  };
log { source(src); filter(f_tweet);	             destination(elasticsearch); };

#log { source(src); filter(f_ossec);	             destination(ossec_file);       };

# send everything to php-syslog-ng running on mail in Ermin street
#destination ermin_mail { udp( "192.168.1.70" port(514) ); };
#destination pi_gloworm { udp( "192.168.1.200" port(514) ); };

#source s_everything { internal(); udp(); };

# send all locally-generated syslogs to central server
#log {
#    source(src);
#    destination(ermin_mail);
#};

#log {
#    source(src);
#    destination(pi_gloworm);
#};

# relay all syslogs received over the network to central server
#log {
#    source(net);
#    destination(ermin_mail);
#};

#log {
#    source(net);
#    destination(pi_gloworm);
#};

