#---------------------------------------------------------------------
# Customised for BlackRain
#
# Example configuration for a possible web application.  See the
# full configuration options online.
#
#   http://haproxy.1wt.eu/download/1.4/doc/configuration.txt
#
#---------------------------------------------------------------------

#---------------------------------------------------------------------
# Global settings
#---------------------------------------------------------------------
global
    # to have these messages end up in /var/log/haproxy.log you will
    # need to:
    #
    # 1) configure syslog to accept network log events.  This is done
    #    by adding the '-r' option to the SYSLOGD_OPTIONS in
    #    /etc/sysconfig/syslog
    #
    # 2) configure local2 events to go to the /var/log/haproxy.log
    #   file. A line like the following can be added to
    #   /etc/sysconfig/syslog
    #
    #    local2.*                       /var/log/haproxy.log
    #
    log         127.0.0.1 local2

    chroot      /var/lib/haproxy
    pidfile     /var/run/haproxy.pid
    maxconn     4000
    user        haproxy
    group       haproxy
    daemon

    # turn on stats unix socket
    stats socket /var/lib/haproxy/stats

#---------------------------------------------------------------------
# common defaults that all the 'listen' and 'backend' sections will
# use if not designated in their block
#---------------------------------------------------------------------
defaults
    mode                    tcp
    log                     global
    #option                  httplog
    #option                  dontlognull
    #option http-server-close
    #option forwardfor       except 127.0.0.0/8
    #option                  redispatch
    retries                 3
    timeout http-request    10s
    timeout queue           1m
    timeout connect         10s
    timeout client          1m
    timeout server          1m
    timeout http-keep-alive 10s
    timeout check           10s
    maxconn                 3000


#--------------------
# front-end for stats
# -------------------
frontend stats
   mode http
   bind *:8404
   stats enable
   stats uri /stats
   stats refresh 10s
   stats admin if TRUE

#---------------------------------------------------------------------
# main frontend which proxys to the backends
#---------------------------------------------------------------------
frontend  blackrain_fe
    mode tcp
    bind 192.168.1.99:2222
    bind 192.168.1.99:80
    # Amun
    bind 192.168.1.99:135
    bind 192.168.1.99:139
    bind 192.168.1.99:445
    #bind 192.168.1.99:62001
    #bind 192.168.1.99:62002
    #bind 192.168.1.99:62003
    use_backend kippo if { dst_port 2222 }
    use_backend glastopf if { dst_port 80 }
    use_backend amun_135 if { dst_port 135 }
    use_backend amun_139 if { dst_port 139 }
    use_backend amun_445 if { dst_port 445 }
    default_backend honeytrap

# send-proxy preserves attacker IP address - not tested this yet
# do not enable the 'check' or they get picked up by Argus

backend kippo
  server server1 192.168.1.64:2222

backend glastopf
  server server2 192.168.1.62:80

backend amun_135
  server server_amun_135 192.168.1.66:135

backend amun_139
  server server_amun_139 192.168.1.66:139

backend amun_445
  server server_amun_445 192.168.1.66:445

backend honeytrap
  server server4 192.168.1.60

#---------------------------------------------------------------------
# static backend for serving up images, stylesheets and such
#---------------------------------------------------------------------
# backend static
#     balance     roundrobin
#     server      static 127.0.0.1:4331 check

#---------------------------------------------------------------------
# round robin balancing between the various backends
#---------------------------------------------------------------------
# backend app
#     balance     roundrobin
#     server  app1 127.0.0.1:5001 check
#     server  app2 127.0.0.1:5002 check
#     server  app3 127.0.0.1:5003 check
#     server  app4 127.0.0.1:5004 check
