#!/usr/bin/python

import time, os , syslog , urlparse 
#import twitter		# Google API

#import ipintellib	# RCH library - master on mars
import mailalert	# RCH library
#import p0fcmd		# RCH library - master on mars
#import rch_asn_funcs	# RCH library - master on mars

# Globals

# need this so program can be monitored by monit
# make this a library function
def makePidFile(name):
    pid = os.getpid()
    
    pidFilename = "/var/run/rchpids/" + name + ".pid"
    fp=open(pidFilename,'w')
    print >> fp,pid
    fp.close()            
    #print "pid is " + `pid`
    return pid	# returns None if failed
                        
def statusAlert(subject,content):
    smtpServer   = 'smtp.btconnect.com'
    sender       = 'richard_crouch@btconnect.com'
    #destination  = ['ipbb.mvtc@googlemail.com']
    destination  = ['honeytweeter@gmail.com']
    debugLevel   = False
    
    try:
        
        # Notify !
        alertSubject = "BlackRain : " + subject
        alertContent = content + "\n\nSent by BlackRain\n\n"                 
        
        #print "alert subject:" + alertSubject + "\nalertContent:\n" + content + "\n"
        
        status = mailalert.mailalert(sender,destination,smtpServer,alertSubject,alertContent,debugLevel)        
         
        # Add a record to syslog
        a = "Sent alert e-mail, Subject=" + alertSubject + " to " + destination[0]
        syslog.syslog(a)
    
    except Exception,e:
        syslog.syslog("kojoney_tail.py : statusAlert() : " + `e`)

       
# ----------------------------------------------
        
# Start of code        
               
# Make pidfile so we can be monitored by monit        
#pid =  makePidFile("scan_malware")
#if pid == None:
#    syslog.syslog("Failed to create pidfile for pid " + `pid`)
#    sys.exit(0)
#else:

syslog.openlog("scan_malware")         # Set syslog program name    

syslog.syslog("scan_malware.py started")
                
def clamscan(directory,report):
    cmdLine = "clamscan " + directory + " --log " + report
    print "cmdLine :",cmdLine
    status = os.system(cmdLine)
                   
                   
def processVirusList(fp):
    global VirusList
    global EngineVersion
    
    while True:
        line = fp.readline()
        if not line : 
            # print "No more data to read"
            break
        if line.find("Engine version") != -1:
            EngineVersion = line.strip("\n")    
        if line.find("FOUND") != -1:
            virusName = line.split(' ')[1]
            if VirusList.has_key(virusName) == False :
                VirusList[virusName] = 1
            else:
                VirusList[virusName] = VirusList[virusName] + 1        
                   
# M A I N 

VirusList={}
EngineVersion = "0.0"


print "Entered main()..."

# AMUN
# ====
REPORT_FILENAME = "/home/var/log/clamscan.amun.report" 
#MALWARE_DIR = "/home/var/log/amun/malware/md5sum"
MALWARE_DIR = "/usr/local/src/amun/malware/md5sum"
print "Scanning for malware in directory = " + MALWARE_DIR + " , results to be put into : " + REPORT_FILENAME
clamscan(MALWARE_DIR,REPORT_FILENAME)
fp = open(REPORT_FILENAME,'r')    
# VirusList contains combined report : input file processed
report = "\nThe following malware has been captured by the Amun Win32 malware collector :-\n\n"
processVirusList(fp)
for virus in VirusList:
    report = report + virus + " : " + `VirusList[virus]` + "\n"
fp.close()
#print "report for Amun is " + report

# Linux Honeypot
# ==============
REPORT_FILENAME = "/home/var/log/clamscan.honeypot.report" 
MALWARE_DIR = "/home/var/haxxor_webs/honeytweeter-downloads"
print "Scanning for malware in directory = " + MALWARE_DIR + " , results to be put into : " + REPORT_FILENAME
clamscan(MALWARE_DIR,REPORT_FILENAME)
fp = open(REPORT_FILENAME,'r')    

# VirusList contains combined report : input file processed
report = report + "\nThe following malware has been captured by the high-interaction honeypot (Slackware 11) :-\n\n"
VirusList = {}
processVirusList(fp)
for virus in VirusList:
    report = report + virus + " : " + `VirusList[virus]` + "\n"

# Nepenthes
# =========
REPORT_FILENAME = "/home/var/log/clamscan.nepenthes.report" 
MALWARE_DIR = "/home/var/nepenthes/binaries"
print "Scanning for malware in directory = " + MALWARE_DIR + " , results to be put into : " + REPORT_FILENAME
clamscan(MALWARE_DIR,REPORT_FILENAME)
fp = open(REPORT_FILENAME,'r')    

# VirusList contains combined report : input file processed
report = report + "\nThe following malware has been captured by the Nepenthes Win32 malware collector :-\n\n"
VirusList = {}
processVirusList(fp)
for virus in VirusList:
    report = report + virus + " : " + `VirusList[virus]` + "\n"

# Kojoney Analyst
# ===============
REPORT_FILENAME = "/home/var/log/clamscan.analyst.report" 
MALWARE_DIR = "/home/var/haxxor_webs/kojoney_analyst"
print "Scanning for malware in directory = " + MALWARE_DIR + " , results to be put into : " + REPORT_FILENAME
clamscan(MALWARE_DIR,REPORT_FILENAME)
fp = open(REPORT_FILENAME,'r')    

# VirusList contains combined report : input file processed
report = report + "\nThe following malware has been captured by BlackRain Analyst daemon :-\n\n"
VirusList = {}
processVirusList(fp)
for virus in VirusList:
    report = report + virus + " : " + `VirusList[virus]` + "\n"

# Kojoney
# =======
#REPORT_FILENAME = "/home/var/log/clamscan.kojoney.report" 
#MALWARE_DIR = "/home/var/kojoney"
#print "Scanning for malware in directory = " + MALWARE_DIR + " , results to be put into : " + REPORT_FILENAME
#clamscan(MALWARE_DIR,REPORT_FILENAME)
#fp = open(REPORT_FILENAME,'r')    

# VirusList contains combined report : input file processed
#report = report + "\nThe following malware has been captured by the Kojoney SSHd honeypot :-\n\n"
#VirusList = {}
#processVirusList(fp)
#for virus in VirusList:
#    report = report + virus + " : " + `VirusList[virus]` + "\n"

# Kippo
# =======
REPORT_FILENAME = "/home/var/log/clamscan.kippo.report" 
MALWARE_DIR = "/usr/local/src/kippo-0.5/dl"
print "Scanning for malware in directory = " + MALWARE_DIR + " , results to be put into : " + REPORT_FILENAME
clamscan(MALWARE_DIR,REPORT_FILENAME)
fp = open(REPORT_FILENAME,'r')    

# VirusList contains combined report : input file processed
report = report + "\nThe following malware has been captured by the Kippo SSHd honeypot :-\n\n"
VirusList = {}
processVirusList(fp)
for virus in VirusList:
    report = report + virus + " : " + `VirusList[virus]` + "\n"

# ---------

# Glastopf
# ========
REPORT_FILENAME = "/home/var/log/clamscan.glastopf.report" 
MALWARE_DIR = "/usr/local/src/glastopf/files/get"
print "Scanning for malware in directory = " + MALWARE_DIR + " , results to be put into : " + REPORT_FILENAME
clamscan(MALWARE_DIR,REPORT_FILENAME)
fp = open(REPORT_FILENAME,'r')    

# VirusList contains combined report : input file processed
report = report + "\nThe following malware has been captured by the Glastopf Web-server PHP honeypot :-\n\n"
VirusList = {}
processVirusList(fp)
for virus in VirusList:
    report = report + virus + " : " + `VirusList[virus]` + "\n"

# ---------

# Add trailer to email
report = report + "\n" + "ClamAV : " + EngineVersion
        
# email the report
print report
print "E-mailing the report..."

statusAlert("Captured Malware Report",report)

print "Finished."
syslog.syslog("scan_malware.py finished")

